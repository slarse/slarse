# This workflow runs static analysis on RepoBee

name: update-readme

on:
  push:
    branches: [ source ]
  schedule:
  - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # the cron job runs on master, so we must checkout to source
        ref: source 
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Update README
      run: |
        python update.py
    - name: Commit files on master
      run: |
        git config --local user.email github-actions[bot]@users.noreply.github.com
        git config --local user.name github-actions[bot]

        git branch master || echo "master already exists"
        git update-ref refs/heads/master $(git rev-parse refs/remotes/origin/master)
        git symbolic-ref HEAD refs/heads/master

        git restore --staged .
        git add --force README.md .github lang_images
        git clean -xfd

        if [ "$GITHUB_REF" == "refs/heads/master" ]; then
            # only the cron job runs on master
            commit_subject="Scheduled refresh of README"
        elif [ "$GITHUB_REF" == "refs/heads/source" ]; then
            # reuse the commit message that triggered the build
            commit_subject=$(git log -1 --format=%s "$GITHUB_SHA")
        else
            echo "Unexpected branch $GITHUB_REF"
            exit 1
        fi

        git commit -m "$commit_subject" || echo "Nothing to commit"
    - name: Show log
      run: |
        git log --oneline
    - name: Push changes
      run: |
        git push https://slarse:${{ secrets.GITHUB_TOKEN }}@github.com/slarse/slarse.git
